{
  "parser": "babel-eslint",
  "plugins": [
    "babel",
    "json",
    "react-native",
    "eslint-plugin-import-order-alphabetical",
    "flowtype",
    "flow-header",
    "prettier"
  ],
  "extends": ["airbnb", "plugin:flowtype/recommended", "prettier", "prettier/react"],
  "rules": {
    "import-order-alphabetical/order": ["error", {"newlines-between": "always"}],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": true,
        "optionalDependencies": false,
        "peerDependencies": false
      }
    ],
    "react/jsx-filename-extension": 0,
    "react/no-unescaped-entities": 0,
    "react/require-default-props": 0,
    "react/default-props-match-prop-types": 0,
    "flow-header/flow-header": 2,
    "react/static-property-placement": ["warn", "static public field"],
    "react/sort-comp": [
      1,
      {
        "order": ["static-variables", "static-methods", "instance-variables", "lifecycle", "everything-else", "render"],
        "groups": {
          "lifecycle": [
            "displayName",
            "propTypes",
            "contextTypes",
            "childContextTypes",
            "mixins",
            "statics",
            "defaultProps",
            "constructor",
            "getDefaultProps",
            "state",
            "getInitialState",
            "getChildContext",
            "getDerivedStateFromProps",
            "componentWillMount",
            "UNSAFE_componentWillMount",
            "componentDidMount",
            "componentWillReceiveProps",
            "UNSAFE_componentWillReceiveProps",
            "shouldComponentUpdate",
            "componentWillUpdate",
            "UNSAFE_componentWillUpdate",
            "getSnapshotBeforeUpdate",
            "componentDidUpdate",
            "componentDidCatch",
            "componentWillUnmount"
          ]
        }
      }
    ]
  },
  "env": {
    "react-native/react-native": true
  },
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js", ".android.js", ".ios.js"]
      }
    }
  }
}
